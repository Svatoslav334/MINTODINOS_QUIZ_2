#6541829338:AAHftopC_mKOU3xFCHnlxAN24I789hoXobY
#1281869576
#https://lh3.googleusercontent.com/pw/AIL4fc8CzEhBu0EszdwUM-5CltbbRphdhFg9Dvre5PKo8R-3uZs6kUY7Wfy9iL2h8Oe8SARMavOkVNBQ2-H6C2zpTKCBPYCIOXahAdYXSOuNKUPE8Hyb3agxK9NYRsOS1nSvlRq4MvIPyw4IDXAjB99bsWiBARe5Mhq2-Mc19Mw0qqqgr1cKvwaQFWSf1oZReCBl6Wgeb6NC-L_OZb9_GYAJJjN1x-4feCAOzM73_AmDVyVkrdryxOy4kSl0YxHqxASZUEqhx5B-VXUGMhfhNCVjPnXSsYTsY50RvTyyHQcsgdI2uAiAajNzeqX7CSp7LcUEPJX6m3dhbF-J5dMeylcy_gSA1q6IwWiZHII8Zf-tiAL2hlaYm9_UqN0UR8r65YUC-EVu3ZjjYkTKEfKUrxHuYAMq_GC3APs9a5mRkOU0Jw2zmddRa39b3N5pD2ytjjLHr5DIkAjSe4hJSbG_2Steo-SZoK0-qtbab13zJiIgoaYV8AeNANCmnq_L0Q4sNQTHb3YjrqZ4pHa5OxZ6QGumOYuihmXHaD_F8pAJ9Y0M9uOsJyFERU2D19m8YgRJKMEnn7iKYdTVg51o6LIhpXq4DvlH-e37wXqb2iKl7D7cRhRX7m54nM4-Z0Lw8Qqck9Dr-DVGHFi3T3GUOW-Y6Mi_4QOOFJEPgZP7EsV3qM491MnFJHNTY73V3NGKRFFU61k6xI_sdbVtahy3u0PrO_vaEf-QPzq_rn-zE0vlWpbeuB1AAaTaYZGHf1S5DJ7TpuEf_EeMWQYWAlx7-P3_ng0Mb80m3IT3tybCfC6RccriyB0oWb-Y5--g6JRAlXAd8FYNWMFWaOlJOZiEH7JTVmpc0_ICKmVOpnPOyxQvchuVn59q7oJoYasN4NnV1VJdTH-uCRM2Kx4FWgF6G3o8NuV7MQ=w1080-h1080-s-no?authuser=0
import logging
import asyncio
from aiogram import Bot, Dispatcher, types, executor

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = Bot(token="6029099768:AAFseZUTFPOHo")
dispatcher = Dispatcher(bot)

good = 0
user_info = None
q = {}
prev_question_message_id = None

questions = [
    {"question": "–ö–∞–∫–æ–π –∏–∑ —ç—Ç–∏—Ö –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤ –±—ã–ª —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—è–¥–Ω—ã–º? üåø", "answers": ["a) –¢–∏—Ä–∞–Ω–Ω–æ–∑–∞–≤—Ä –†–µ–∫—Å", "b) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä", "c) –¢—Ä–∏—Ü–µ—Ä–∞—Ç–æ–ø—Å", "d) –°–ø–∏–Ω–æ–∑–∞–≤—Ä"], "correct": "c) –¢—Ä–∏—Ü–µ—Ä–∞—Ç–æ–ø—Å"},
    {"question": "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –¥–∏–Ω–æ–∑–∞–≤—Ä —Å –¥–ª–∏–Ω–Ω—ã–º –≤—ã–¥–≤–∏–∂–Ω—ã–º —à–µ–µ–π–ø–æ–¥–æ–±–Ω—ã–º –æ—Ç—Ä–æ—Å—Ç–∫–æ–º –Ω–∞ –≥–æ–ª–æ–≤–µ? ü¶ï", "answers": ["a) –ü–∞—Ä–∞—Ü–µ—Ä–∞—Ç–æ–∑–∞–≤—Ä", "b) –°—Ç–µ–≥–æ–∑–∞–≤—Ä", "c) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä", "d) –ê–ø–∞—Ç–æ–∑–∞–≤—Ä"], "correct": "a) –ü–∞—Ä–∞—Ü–µ—Ä–∞—Ç–æ–∑–∞–≤—Ä"},
    {"question": "–ö–∞–∫–∞—è –∏–∑ —ç—Ç–∏—Ö —á–∞—Å—Ç–µ–π —Ç–µ–ª–∞ —É —Ç–∏—Ä–∞–Ω–Ω–æ–∑–∞–≤—Ä–∞ –†–µ–∫—Å–∞ –±—ã–ª–∞ –º–∞–ª–µ–Ω—å–∫–æ–π –∏ –Ω–µ–ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π? üòÖ", "answers": ["a) –ì–æ–ª–æ–≤–∞", "b) –®–µ—è", "c) –†—É–∫–∏", "d) –ù–æ–≥–∏"], "correct": "d) –ù–æ–≥–∏"},
    {"question": "–ö–∞–∫–æ–π –¥–∏–Ω–æ–∑–∞–≤—Ä —Å—á–∏—Ç–∞–µ—Ç—Å—è —Å–∞–º—ã–º –∫—Ä—É–ø–Ω—ã–º –∏–∑ –≤—Å–µ—Ö –∑–µ–º–Ω—ã—Ö –æ–±–∏—Ç–∞—Ç–µ–ª–µ–π? üåé", "answers": ["a) –ë—Ä–∞—Ö–∏–æ–∑–∞–≤—Ä", "b) –ê—Ä–≥–µ–Ω—Ç–∏–Ω–æ–∑–∞–≤—Ä", "c) –°–ø–∏–Ω–æ–∑–∞–≤—Ä", "d) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä"], "correct": "b) –ê—Ä–≥–µ–Ω—Ç–∏–Ω–æ–∑–∞–≤—Ä"},
    {"question": "–ö–∞–∫–æ–π –¥–∏–Ω–æ–∑–∞–≤—Ä –±—ã–ª –ø–µ—Ä–≤—ã–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–º —É—á–µ–Ω—ã–º–∏ –≤ –°–µ–≤–µ—Ä–Ω–æ–π –ê–º–µ—Ä–∏–∫–µ? ü¶ñ", "answers": ["a) –¢–∏—Ä–∞–Ω–Ω–æ–∑–∞–≤—Ä –†–µ–∫—Å", "b) –°—Ç–µ–≥–æ–∑–∞–≤—Ä", "c) –¢—Ä–∏—Ü–µ—Ä–∞—Ç–æ–ø—Å", "d) –ê–ø–∞—Ç–æ–∑–∞–≤—Ä"], "correct": "c) –¢—Ä–∏—Ü–µ—Ä–∞—Ç–æ–ø—Å"},
    {"question": "–ö–∞–∫–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º –∫–æ—Ä–º–æ–º –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Ç—Ä–∞–≤–æ—è–¥–Ω—ã—Ö –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤? üåø", "answers": ["a) –ü–∞–ø–æ—Ä–æ—Ç–Ω–∏–∫", "b) –¶–≤–µ—Ç–æ–∫", "c) –ö—É—Å—Ç–∞—Ä–Ω–∏–∫", "d) –•–≤–æ—è"], "correct": "a) –ü–∞–ø–æ—Ä–æ—Ç–Ω–∏–∫"},
    {"question": "–ö–∞–∫–∞—è –≥—Ä—É–ø–ø–∞ –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤ –≤–∫–ª—é—á–∞–ª–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ö–∏—â–Ω–∏–∫–æ–≤? ü¶ñ", "answers": ["a) –ó–∞–≤—Ä–æ–ø–æ–¥—ã", "b) –°–∞—É—Ä–æ–ø–æ–¥—ã", "c) –¢–µ—Ä–æ–ø–æ–¥—ã", "d) –ê–Ω–∫–∏–ª–æ–∑–∞–≤—Ä—ã"], "correct": "c) –¢–µ—Ä–æ–ø–æ–¥—ã"},
    {"question": "–ö–∞–∫–æ–π –¥–∏–Ω–æ–∑–∞–≤—Ä –±—ã–ª –Ω–∞–∑–≤–∞–Ω –≤ —á–µ—Å—Ç—å –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Ñ–∏–∑–∏–∫–∞ –∏ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞? üîç", "answers": ["a) –î–∞—Ä–≤–∏–Ω–æ–∑–∞–≤—Ä", "b) –ù—å—é—Ç–æ–Ω–æ–∑–∞–≤—Ä", "c) –≠–π–Ω—à—Ç–µ–π–Ω–æ–∑–∞–≤—Ä", "d) –î–∏–ø–ª–æ–¥–æ–∫"], "correct": "b) –ù—å—é—Ç–æ–Ω–æ–∑–∞–≤—Ä"},
    {"question": "–ö–∞–∫–æ–π –¥–∏–Ω–æ–∑–∞–≤—Ä —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–¥–∫–æ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ç–∏—Ü? üê¶", "answers": ["a) –ê—Ä—Ö–µ–æ–ø—Ç–µ—Ä–∏–∫—Å", "b) –ü—Ç–µ—Ä–∞–Ω–æ–¥–æ–Ω", "c) –¢–∏—Ä–∞–Ω–Ω–æ–∑–∞–≤—Ä –†–µ–∫—Å", "d) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä"], "correct": "a) –ê—Ä—Ö–µ–æ–ø—Ç–µ—Ä–∏–∫—Å"},
    {"question": "–ö–∞–∫–æ–π –¥–∏–Ω–æ–∑–∞–≤—Ä –∏–º–µ–ª –≥—Ä–µ–±–µ–Ω—å –Ω–∞ —Å–≤–æ–µ–π –≥–æ–ª–æ–≤–µ –¥–ª—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ –æ—Å–æ–±—è–º–∏? üé∂", "answers": ["a) –¢—Ä–∏—Ü–µ—Ä–∞—Ç–æ–ø—Å", "b) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä", "c) –°—Ç–µ–≥–æ–∑–∞–≤—Ä", "d) –ü–∞—Ä–∞—Ü–µ—Ä–∞—Ç–æ–∑–∞–≤—Ä"], "correct": "a) –¢—Ä–∏—Ü–µ—Ä–∞—Ç–æ–ø—Å"},
    {"question": "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –≥–∏–≥–∞–Ω—Ç—Å–∫–∞—è –≥—Ä—É–ø–ø–∞ –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤ —Å –¥–ª–∏–Ω–Ω—ã–º–∏ —à–µ—è–º–∏? ü¶ï", "answers": ["a) –ë—Ä–∞—Ö–∏–æ–∑–∞–≤—Ä—ã", "b) –°–∞—É—Ä–æ–ø–æ–¥—ã", "c) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä—ã", "d) –ü—Ç–µ—Ä–∞–Ω–æ–¥–æ–Ω—ã"], "correct": "b) –°–∞—É—Ä–æ–ø–æ–¥—ã"},
    {"question": "–ö–∞–∫–æ–π –¥–∏–Ω–æ–∑–∞–≤—Ä –±—ã–ª –ø–µ—Ä–≤—ã–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–º –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–º –≤ –ê—Ñ—Ä–∏–∫–µ? üåç", "answers": ["a) –¢–∏—Ä–∞–Ω–Ω–æ–∑–∞–≤—Ä –†–µ–∫—Å", "b) –ë—Ä–∞—Ö–∏–æ–∑–∞–≤—Ä", "c) –°—Ç–µ–≥–æ–∑–∞–≤—Ä", "d) –ú–∞—Å–∞–π—Ä–æ–∑–∞–≤—Ä"], "correct": "d) –ú–∞—Å–∞–π—Ä–æ–∑–∞–≤—Ä"},
    {"question": "–ö–∞–∫–æ–π –¥–∏–Ω–æ–∑–∞–≤—Ä –±—ã–ª –æ–¥–Ω–∏–º –∏–∑ –ø–µ—Ä–≤—ã—Ö, –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å –ø–µ—Ä—å—è–º–∏? ü¶ö", "answers": ["a) –¢–∏—Ä–∞–Ω–Ω–æ–∑–∞–≤—Ä –†–µ–∫—Å", "b) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä", "c) –°—Ç–µ–≥–æ–∑–∞–≤—Ä", "d) –ê—Ä—Ö–µ–æ–ø—Ç–µ—Ä–∏–∫—Å"], "correct": "d) –ê—Ä—Ö–µ–æ–ø—Ç–µ—Ä–∏–∫—Å"},
    {"question": "–ö–∞–∫–∞—è –∏–∑ —ç—Ç–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –±—ã–ª–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–æ–π –¥–ª—è –∞–Ω–∫–∏–ª–æ–∑–∞–≤—Ä–æ–≤? üõ°Ô∏è", "answers": ["a) –î–ª–∏–Ω–Ω–∞—è —à–µ—è", "b) –ü–µ—Ä—å—è –Ω–∞ —Ç–µ–ª–µ", "c) –ñ–µ—Å—Ç–∫–∏–π –ø–∞–Ω—Ü–∏—Ä—å", "d) –ë–æ–ª—å—à–∏–µ –∫—Ä—ã–ª—å—è"], "correct": "c) –ñ–µ—Å—Ç–∫–∏–π –ø–∞–Ω—Ü–∏—Ä—å"},
    {"question": "–ö–∞–∫–æ–π –¥–∏–Ω–æ–∑–∞–≤—Ä –±—ã–ª –Ω–∞–∑–≤–∞–Ω –≤ —á–µ—Å—Ç—å –≤–µ–ª–∏–∫–æ–≥–æ –¥—Ä–µ–≤–Ω–µ–≥—Ä–µ—á–µ—Å–∫–æ–≥–æ –±–æ–≥–∞-—Ç–∏—Ç–∞–Ω–∞? üèõÔ∏è", "answers": ["a) –ê–ø–æ–ª–ª–æ–∑–∞–≤—Ä", "b) –ó–µ–≤—Å–æ–∑–∞–≤—Ä", "c) –ì–µ—Ä–∞–∫–ª–µ–∑–∞–≤—Ä", "d) –ê—Ñ—Ä–æ–¥–æ–Ω"], "correct": "b) –ó–µ–≤—Å–æ–∑–∞–≤—Ä"},
    {"question": "–ö–∞–∫–æ–π –¥–∏–Ω–æ–∑–∞–≤—Ä —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –Ω–∞–∏–±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã—Ö —Ö–∏—â–Ω–∏–∫–æ–≤? üò†", "answers": ["a) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä", "b) –¢–∏—Ä–∞–Ω–Ω–æ–∑–∞–≤—Ä –†–µ–∫—Å", "c) –ë—Ä–∞—Ö–∏–æ–∑–∞–≤—Ä", "d) –°—Ç–µ–≥–æ–∑–∞–≤—Ä"], "correct": "a) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä"},
    {"question": "–ö–∞–∫–æ–π –¥–∏–Ω–æ–∑–∞–≤—Ä —Å—á–∏—Ç–∞–µ—Ç—Å—è —Å–∞–º—ã–º —É–º–Ω—ã–º? üß†", "answers": ["a) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä", "b) –¢—Ä–∏—Ü–µ—Ä–∞—Ç–æ–ø—Å", "c) –ê—Ä—Ö–µ–æ–ø—Ç–µ—Ä–∏–∫—Å", "d) –ü—Ç–µ—Ä–∞–Ω–æ–¥–æ–Ω"], "correct": "a) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä"},
    {"question": "–ö–∞–∫–æ–π –¥–∏–Ω–æ–∑–∞–≤—Ä –±—ã–ª –ø–µ—Ä–≤—ã–º –æ—Ç–∫—Ä—ã—Ç—ã–º –≤ –ê–≤—Å—Ç—Ä–∞–ª–∏–∏? üá¶üá∫", "answers": ["a) –¢–∏—Ä–∞–Ω–Ω–æ–∑–∞–≤—Ä –†–µ–∫—Å", "b) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä", "c) –ö—É–ª—á–∏—Å–∫–∏–æ–∑–∞–≤—Ä", "d) –°—Ç–µ–≥–æ–∑–∞–≤—Ä"], "correct": "c) –ö—É–ª—á–∏—Å–∫–∏–æ–∑–∞–≤—Ä"},
    {"question": "–ö–∞–∫–æ–π –¥–∏–Ω–æ–∑–∞–≤—Ä –æ–±–ª–∞–¥–∞–ª –∫—Ä—É–ø–Ω—ã–º–∏ —Ä–æ–≥–æ–ø–æ–¥–æ–±–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ –Ω–∞ –≥–æ–ª–æ–≤–µ –¥–ª—è –∑–∞—â–∏—Ç—ã? ü¶è", "answers": ["a) –¢—Ä–∏—Ü–µ—Ä–∞—Ç–æ–ø—Å", "b) –°—Ç–µ–≥–æ–∑–∞–≤—Ä", "c) –ë—Ä–∞—Ö–∏–æ–∑–∞–≤—Ä", "d) –ü–∞—Ä–∞—Ü–µ—Ä–∞—Ç–æ–∑–∞–≤—Ä"], "correct": "a) –¢—Ä–∏—Ü–µ—Ä–∞—Ç–æ–ø—Å"},
    {"question": "–ö–∞–∫–æ–π –¥–∏–Ω–æ–∑–∞–≤—Ä —Å—á–∏—Ç–∞–µ—Ç—Å—è —Å–∞–º—ã–º –±—ã—Å—Ç—Ä—ã–º –Ω–∞ –Ω–æ–≥–∞—Ö? üèÉ‚Äç‚ôÇÔ∏è", "answers": ["a) –¢–∏—Ä–∞–Ω–Ω–æ–∑–∞–≤—Ä –†–µ–∫—Å", "b) –°–ø–∏–Ω–æ–∑–∞–≤—Ä", "c) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä", "d) –°—Ç–µ–≥–æ–∑–∞–≤—Ä"], "correct": "c) –í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä"}
]

current_question = 0  # –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∏ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
async def send_question(chat_id):
    global prev_question_message_id

    if prev_question_message_id:
        try:
            await bot.delete_message(chat_id, prev_question_message_id)  # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–æ–ø—Ä–æ—Å
        except Exception as e:
            logging.error(f"Error while deleting previous question: {e}")

    question_data = questions[current_question]
    keyboard = types.InlineKeyboardMarkup()
    for i, answer in enumerate(question_data["answers"]):
        button = types.InlineKeyboardButton(answer, callback_data=f"{current_question}-{i}")
        keyboard.add(button)

    message = await bot.send_message(chat_id, question_data["question"], reply_markup=keyboard)
    prev_question_message_id = message.message_id

# Id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à id, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ /start)
admin_id = 1281869576
quiz_access_key = None

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dispatcher.message_handler(commands=['start'])
async def start(message: types.Message):
    global good
    global user_info
    global q
    global current_question
    global prev_question_message_id

    user = message.from_user
    if user.username:
        user_info = user.username
    else:
        user_info = f"id: {user.id}"

    if user_info not in q:
        await bot.send_photo(message.chat.id, "https://lh3.googleusercontent.com/pw/AIL4fc8CzEhBu0EszdwUM-5CltbbRphdhFg9Dvre5PKo8R-3uZs6kUY7Wfy9iL2h8Oe8SARMavOkVNBQ2-H6C2zpTKCBPYCIOXahAdYXSOuNKUPE8Hyb3agxK9NYRsOS1nSvlRq4MvIPyw4IDXAjB99bsWiBARe5Mhq2-Mc19Mw0qqqgr1cKvwaQFWSf1oZReCBl6Wgeb6NC-L_OZb9_GYAJJjN1x-4feCAOzM73_AmDVyVkrdryxOy4kSl0YxHqxASZUEqhx5B-VXUGMhfhNCVjPnXSsYTsY50RvTyyHQcsgdI2uAiAajNzeqX7CSp7LcUEPJX6m3dhbF-J5dMeylcy_gSA1q6IwWiZHII8Zf-tiAL2hlaYm9_UqN0UR8r65YUC-EVu3ZjjYkTKEfKUrxHuYAMq_GC3APs9a5mRkOU0Jw2zmddRa39b3N5pD2ytjjLHr5DIkAjSe4hJSbG_2Steo-SZoK0-qtbab13zJiIgoaYV8AeNANCmnq_L0Q4sNQTHb3YjrqZ4pHa5OxZ6QGumOYuihmXHaD_F8pAJ9Y0M9uOsJyFERU2D19m8YgRJKMEnn7iKYdTVg51o6LIhpXq4DvlH-e37wXqb2iKl7D7cRhRX7m54nM4-Z0Lw8Qqck9Dr-DVGHFi3T3GUOW-Y6Mi_4QOOFJEPgZP7EsV3qM491MnFJHNTY73V3NGKRFFU61k6xI_sdbVtahy3u0PrO_vaEf-QPzq_rn-zE0vlWpbeuB1AAaTaYZGHf1S5DJ7TpuEf_EeMWQYWAlx7-P3_ng0Mb80m3IT3tybCfC6RccriyB0oWb-Y5--g6JRAlXAd8FYNWMFWaOlJOZiEH7JTVmpc0_ICKmVOpnPOyxQvchuVn59q7oJoYasN4NnV1VJdTH-uCRM2Kx4FWgF6G3o8NuV7MQ=w1080-h1080-s-no?authuser=0")
        await bot.send_message(message.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! –í—ã —Å–µ–π—á–∞—Å –±—É–¥–µ—Ç–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å Quiz –æ—Ç Mintodinos.\n–í—Å–µ–≥–æ –±—É–¥–µ—Ç 20 –≤–æ–ø—Ä–æ—Å–æ–≤")
        await send_question(message.chat.id)
        q[user_info] = {"good": 0}
        good = 0
    else:
        await bot.send_message(message.chat.id, "–¢—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª –∫–≤–∏–∑, –æ–±–º–∞–Ω—É—Ç—å –Ω–µ –ø–æ–ª—É—á–∏—Ç—å—Å—è üò°")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /delete
@dispatcher.message_handler(commands=['delete'])
async def secret_command(message: types.Message):
    global q
    if message.from_user.id == admin_id:
        args = message.get_args().strip()
        if args.startswith('@'):
            username = args[1:]
            if username in q:
                del q[username]
                await bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.")
            else:
                await bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.")
        else:
            await bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (@username), —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞.")
    else:
        await bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /vse
@dispatcher.message_handler(commands=['vse'])
async def show_all_results(message: types.Message):
    if message.from_user.id == admin_id:
        result_message = "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n"
        for user, data in q.items():
            user_good = data["good"]
            result_message += f"{user}: {user_good}\n"

        await bot.send_message(message.chat.id, result_message)
    else:
        await bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /code
@dispatcher.message_handler(commands=['code'])
async def set_quiz_access_code(message: types.Message):
    global quiz_access_key
    if message.from_user.id == admin_id:
        args = message.get_args().strip()
        if args:
            quiz_access_key = args
            await bot.send_message(message.chat.id, f"–ö–ª—é—á –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫–≤–∏–∑–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {quiz_access_key}")
        else:
            await bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–ª—é—á –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /code.")
    else:
        await bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /key
@dispatcher.message_handler(commands=['key'])
async def use_quiz_access_key(message: types.Message):
    global quiz_access_key
    global q

    args = message.text.split(" ", 1)[1].strip()  # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
    if quiz_access_key and message.from_user.id != admin_id:
        if args == quiz_access_key:
            user_info = message.from_user.username if message.from_user.username else f"id: {message.from_user.id}"
            del q[user_info]
            await bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–≤–∏–∑–∞.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@dispatcher.callback_query_handler(lambda call: True)
async def callback_query(call: types.CallbackQuery):
    global current_question
    global good
    global user_info
    global q

    question_data = questions[current_question]
    question_index, answer_index = call.data.split('-')
    question_index = int(question_index)
    answer_index = int(answer_index)
    if question_index == current_question:
        selected_answer = question_data["answers"][answer_index]
        correct_answer = question_data["correct"]
        if selected_answer == correct_answer:
            # –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            good += 1

        current_question += 1  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É

        if current_question < len(questions):
            await send_question(call.message.chat.id)
        else:
            await bot.send_message(call.message.chat.id, f"–ö–æ–Ω–µ—Ü –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã! –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ.üòä\n–í–∞—à–µ –∫–æ–ª-–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {good}")
            q[user_info] = {"good": good}  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä—å q
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
            result_message = f"{user_info} - {good}"
            await bot.send_message(admin_id, result_message)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É

            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–æ–ø—Ä–æ—Å
            current_question = 0
            good = 0
            global prev_question_message_id
            prev_question_message_id = None

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Å–æ–±—ã—Ç–∏–π
if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.run_until_complete(executor.start_polling(dispatcher, skip_updates=True, loop=loop))  # –ò—Å–ø–æ–ª—å–∑—É–µ–º 'dp' –≤–º–µ—Å—Ç–æ 'dispatcher'
